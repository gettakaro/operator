# Takaro Kubernetes Operator Configuration
# Copy this file to .env and update with your values

# ===========================
# Basic Configuration
# ===========================

# Server port for health checks and metrics
# Default: 3000
PORT=3000

# Log level: debug, info, warn, error
# Default: info
LOG_LEVEL=info

# Node environment: development, production, test
# Default: development
NODE_ENV=development

# Path to kubeconfig file (optional)
# If not set, will try in-cluster config, then default kubeconfig
# KUBECONFIG=/path/to/kubeconfig

# ===========================
# Takaro API Configuration
# ===========================

# Takaro API base URL (required)
TAKARO_API_URL=https://api.takaro.dev

# Takaro API token for authentication (required)
# Generate from Takaro dashboard: Settings > API Tokens
TAKARO_API_TOKEN=your-api-token-here

# API request timeout in milliseconds
# Default: 30000 (30 seconds)
TAKARO_API_TIMEOUT=30000

# Number of API request retries
# Default: 3
TAKARO_API_RETRIES=3

# Delay between retries in milliseconds
# Default: 1000 (1 second)
TAKARO_API_RETRY_DELAY=1000

# User agent string for API requests
# Default: takaro-kubernetes-operator/0.1.0
TAKARO_API_USER_AGENT=takaro-kubernetes-operator/0.1.0

# ===========================
# Webhook Configuration
# ===========================

# Enable webhook server for admission control
# Default: false
WEBHOOK_ENABLED=false

# Webhook server port
# Default: 9443
WEBHOOK_PORT=9443

# Webhook endpoint path
# Default: /webhook
WEBHOOK_PATH=/webhook

# Webhook secret for validation (optional)
# WEBHOOK_SECRET=your-webhook-secret

# TLS certificate and key paths for webhook server
# Required when webhook is enabled
# WEBHOOK_TLS_CERT=/path/to/tls.crt
# WEBHOOK_TLS_KEY=/path/to/tls.key

# ===========================
# Redis Configuration
# ===========================

# Enable Redis for caching and distributed locks
# Default: false
REDIS_ENABLED=false

# Redis connection URL (takes precedence over host/port)
# Format: redis[s]://[username][:password]@host[:port][/db]
# REDIS_URL=redis://localhost:6379/0

# Redis host (used if REDIS_URL not set)
# Default: localhost
# REDIS_HOST=localhost

# Redis port (used if REDIS_URL not set)
# Default: 6379
# REDIS_PORT=6379

# Redis password for authentication
# REDIS_PASSWORD=your-redis-password

# Redis database number (0-15)
# Default: 0
# REDIS_DB=0

# Enable TLS for Redis connection
# Default: false
# REDIS_TLS=false

# Key prefix for all Redis keys
# Default: takaro-operator:
REDIS_KEY_PREFIX=takaro-operator:

# ===========================
# Metrics Configuration
# ===========================

# Enable Prometheus metrics endpoint
# Default: true
METRICS_ENABLED=true

# Metrics server port (separate from main server)
# Default: 8080
METRICS_PORT=8080

# Metrics endpoint path
# Default: /metrics
METRICS_PATH=/metrics

# Include Node.js runtime metrics
# Default: true
METRICS_INCLUDE_NODE=true

# Include Prometheus default metrics
# Default: true
METRICS_INCLUDE_DEFAULT=true

# ===========================
# Operator Configuration
# ===========================

# Namespace to watch for resources
# If not set, watches all namespaces
# OPERATOR_NAMESPACE=takaro-system

# Reconciliation interval in milliseconds
# Default: 30000 (30 seconds)
RECONCILE_INTERVAL=30000

# Enable leader election for high availability
# Default: false
LEADER_ELECTION=false

# Leader election lock name
# Default: takaro-operator-leader
LEADER_ELECTION_ID=takaro-operator-leader

# Comma-separated list of namespaces to watch
# If not set, watches namespace from OPERATOR_NAMESPACE or all namespaces
# WATCH_NAMESPACES=default,production,staging

# Maximum concurrent reconciliations per controller
# Default: 3
MAX_CONCURRENT_RECONCILES=3

# ===========================
# Feature Flags
# ===========================

# Enable Domain controller
# Default: true
FEATURE_DOMAIN_CONTROLLER=true

# Enable MockServer controller
# Default: true
FEATURE_MOCKSERVER_CONTROLLER=true

# Enable User controller
# Default: true
FEATURE_USER_CONTROLLER=true